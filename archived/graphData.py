# A script for my fork of
# glucometerUtils (https://github.com/pat-nel87/glucometerutils/tree/customFeatures)
# Designed to work with output generated by --text argument added to dump
# Cleans up Data in txt file and generates matplotlib graph
# tested with freestyle precisionNeo driver only 
#

import matplotlib
import matplotlib.pyplot as plt

from io import StringIO

from datetime import date, time, datetime

def dateConvert(dates, times):

    myList = []

    for i in range(len(dates)):
        myDate = date.fromisoformat(str(dates[i]))
        myTime = time.fromisoformat(str(times[i]))
        myDatetime = datetime.combine(myDate, myTime)
        myList.append(myDatetime)

    return myList

def graphList(myList, bloodSugar):
    print("\n")
    graphFile = input("Please enter a file name for graph: ")
    graphFile = graphFile + ".png"
    x = matplotlib.dates.date2num(myList)
    y = bloodSugar
    fig = matplotlib.pyplot.figure()
    
    matplotlib.pyplot.plot_date(x, y, 'r', label="mg/dl")

    #imgdata = StringIO()
    fig.savefig(graphFile)
    plt.show()
    #imgdata.seek(0)
        
    #data = open("newreading.svg", "w")
    #data.write(imgdata)
    #data.close()

file = input("Enter Filename: ")

edit = open(file, "r")
edit.seek(0,0)

allReadings = []
dates = []
times = []
bloodSugar = []

for line in edit:
    lin = edit.readline()
    
    try:
        reading = [lin[1]]

        for i in range(2,11):
            reading[0] = reading[0] + lin[i]
        
        dates.append(reading[0])
        reading.append(lin[12])

        for i in range(13,20):
            reading[1] = reading[1] + lin[i]
        
        times.append(reading[1])
        reading.append(lin[23])

        for i in range(24,28):
            reading[2] = reading[2] + lin[i]
        
        bloodSugar.append(reading[2])
        
        allReadings.append(reading)
    
    except IndexError:
       print("Processing Completed")
       break

datetimeList = dateConvert(dates, times)
graphList(datetimeList, bloodSugar)    
    

    

